Author: Nishchhal Pachouri
OS : Windows(64-bit)
School : SOE

1.Status : git status

2.Initilize git repository : git init

3.To add files in staging area : git add file name

4.To commit file : git commit -m "change description"

5.To add all the files in staging area : git add --a / git add .

6.Initilize git repository : git init

7.To del git repository : rm -rf .git

8.To create new file : touch file.extension

9.To ignore file : first create .gitignore file
wirte the name of the file u wannt to ignore

->If u want to ignore some specific extension files 
then :-> write *.extension the files u want to ignore(foe eg : *.log)

10.Diff betn wd(Working directory) &staging area : git diff

11.Diff betn staging area and previous commit : git diff --staged

12.To commit all tracked files by skipping the staging area : git commit -a -m "change description"

13.To remove any file : git rm file_name.extension

14.To rename any file : git mv old_name.extension new_name.extension

15.To untrack any file : git rm --cached

16.To see all commits alongwith Changes : git log -p

17.To see all commits with Changes in a consise way: git log --stat
  
18.To see commits in one line : git log --pretty=oneline

19.To see commit with author and description : git log --pretty=short

20.To see commit with author and commiter : git log --pretty=full 

21.To see commit by adding time filters : git log --since=2.(days/weeks/months/years)

22.To see previous n commit : git log -p -(n)
 
23.To unstage any file : git restore --staged <fileName>

24.Unmodify file & go to previous commit : git checkout -- <fileName>

 












